{"ast":null,"code":"var _jsxFileName = \"/home/nahima/NobleNoor/noblenoor/src/Context/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { getCartItems, addToCart, removeFromCart, updateCartQuantity } from '../Cart/cartApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    fetchCartItems();\n  }, []);\n  const fetchCartItems = async () => {\n    try {\n      const items = await getCartItems();\n      setCartItems(items.products);\n    } catch (error) {\n      console.error('Error fetching cart items:', error);\n    }\n  };\n  const addItemToCart = async (productId, quantity) => {\n    try {\n      await addToCart(productId, quantity);\n      fetchCartItems();\n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n    }\n  };\n  const removeItemFromCart = async productId => {\n    try {\n      await removeFromCart(productId);\n      fetchCartItems();\n    } catch (error) {\n      console.error('Error removing item from cart:', error);\n    }\n  };\n  const updateItemQuantity = async (productId, quantity) => {\n    try {\n      await updateCartQuantity(productId, quantity);\n      fetchCartItems();\n    } catch (error) {\n      console.error('Error updating cart quantity:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addItemToCart,\n      removeItemFromCart,\n      updateItemQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"yMyLm0mTOdUD4xRL2vnEhQFbjeY=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","getCartItems","addToCart","removeFromCart","updateCartQuantity","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","fetchCartItems","items","products","error","console","addItemToCart","productId","quantity","removeItemFromCart","updateItemQuantity","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["/home/nahima/NobleNoor/noblenoor/src/Context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { getCartItems, addToCart, removeFromCart, updateCartQuantity } from '../Cart/cartApi';\n\nconst CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n\n  useEffect(() => {\n    fetchCartItems();\n  }, []);\n\n  const fetchCartItems = async () => {\n    try {\n      const items = await getCartItems();\n      setCartItems(items.products);\n    } catch (error) {\n      console.error('Error fetching cart items:', error);\n    }\n  };\n\n  const addItemToCart = async (productId, quantity) => {\n    try {\n      await addToCart(productId, quantity);\n      fetchCartItems();\n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n    }\n  };\n\n  const removeItemFromCart = async (productId) => {\n    try {\n      await removeFromCart(productId);\n      fetchCartItems();\n    } catch (error) {\n      console.error('Error removing item from cart:', error);\n    }\n  };\n\n  const updateItemQuantity = async (productId, quantity) => {\n    try {\n      await updateCartQuantity(productId, quantity);\n      fetchCartItems();\n    } catch (error) {\n      console.error('Error updating cart quantity:', error);\n    }\n  };\n\n  return (\n    <CartContext.Provider value={{ cartItems, addItemToCart, removeItemFromCart, updateItemQuantity }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCart = () => useContext(CartContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,YAAY,EAAEC,SAAS,EAAEC,cAAc,EAAEC,kBAAkB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9F,MAAMC,WAAW,gBAAGV,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMW,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdc,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,KAAK,GAAG,MAAMb,YAAY,CAAC,CAAC;MAClCW,YAAY,CAACE,KAAK,CAACC,QAAQ,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAME,aAAa,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,KAAK;IACnD,IAAI;MACF,MAAMlB,SAAS,CAACiB,SAAS,EAAEC,QAAQ,CAAC;MACpCP,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMK,kBAAkB,GAAG,MAAOF,SAAS,IAAK;IAC9C,IAAI;MACF,MAAMhB,cAAc,CAACgB,SAAS,CAAC;MAC/BN,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAMM,kBAAkB,GAAG,MAAAA,CAAOH,SAAS,EAAEC,QAAQ,KAAK;IACxD,IAAI;MACF,MAAMhB,kBAAkB,CAACe,SAAS,EAAEC,QAAQ,CAAC;MAC7CP,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,SAAS;MAAEO,aAAa;MAAEG,kBAAkB;MAAEC;IAAmB,CAAE;IAAAb,QAAA,EAC/FA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CAhDWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAkDzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM/B,UAAU,CAACO,WAAW,CAAC;AAAA;AAACwB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
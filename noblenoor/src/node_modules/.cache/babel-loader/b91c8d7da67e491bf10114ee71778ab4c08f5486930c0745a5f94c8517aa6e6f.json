{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000';\nexport const register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/users/register`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const login = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/users/login`, credentials);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('jwtToken');\n};","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","data","error","login","credentials","logout","localStorage","removeItem"],"sources":["/home/nahima/NobleNoor/noblenoor/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000';\n\nexport const register = async (userData) => {\n  try {\n    const response = await axios.post(`${API_URL}/users/register`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\nexport const login = async (credentials) => {\n  try {\n    const response = await axios.post(`${API_URL}/users/login`, credentials);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('jwtToken');\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,iBAAiB,EAAEE,QAAQ,CAAC;IACxE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,cAAc,EAAEQ,WAAW,CAAC;IACxE,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;AAED,OAAO,MAAMI,MAAM,GAAGA,CAAA,KAAM;EAC1BC,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;AACrC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
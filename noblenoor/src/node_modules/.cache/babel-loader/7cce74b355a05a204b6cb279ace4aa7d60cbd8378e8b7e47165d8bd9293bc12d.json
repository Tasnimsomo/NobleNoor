{"ast":null,"code":"var _jsxFileName = \"/home/nahima/NobleNoor/noblenoor/src/Context/CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartId, setCartId] = useState(null); // Store cartId dynamically\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  // Fetch cart and cartId when the component is mounted\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const userId = 'user-123'; // Replace with actual user ID\n        // Use the live backend URL\n        const response = await axios.get(`https://mern-cart-server.onrender.com/cart/${userId}`);\n        setCart(response.data.products || []);\n        setCartId(response.data.cartId); // Store the cartId for future use\n      } catch (error) {\n        console.error('Error fetching cart:', error);\n      }\n    };\n    fetchCart();\n  }, []);\n\n  // Calculate the total price whenever the cart changes\n  useEffect(() => {\n    const calculateTotal = () => {\n      const total = cart.reduce((sum, item) => sum + (item.productId.price || 0) * item.quantity, 0);\n      setTotalPrice(total);\n    };\n    calculateTotal();\n  }, [cart]);\n\n  // Add a product to the cart\n  const addToCart = async product => {\n    try {\n      console.log('Adding product to cart:', product);\n      const response = await axios.post('https://mern-cart-server.onrender.com/cart', {\n        userId: 'user-123',\n        // Replace with actual user ID\n        productId: product._id,\n        quantity: 1\n      });\n      setCart(response.data.products); // Update the cart with response data\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n\n  // Update the quantity of a product in the cart\n  const updateQuantity = async (productId, newQuantity) => {\n    if (newQuantity <= 0) return; // Prevent setting quantity to 0 or negative numbers\n\n    // Optimistically update the cart state before the backend response\n    setCart(prevCart => prevCart.map(item => item.productId._id === productId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n    try {\n      if (cartId) {\n        const response = await axios.put(`https://mern-cart-server.onrender.com/cart/${cartId}/${productId}`, {\n          quantity: newQuantity\n        });\n        setCart(response.data.products); // Sync cart with backend response\n      }\n    } catch (error) {\n      console.error('Error updating quantity:', error);\n    }\n  };\n\n  // Remove a product from the cart\n  const removeFromCart = async productId => {\n    // Optimistically remove the item from the cart state before the backend response\n    setCart(prevCart => prevCart.filter(item => item.productId._id !== productId));\n    try {\n      if (cartId) {\n        const response = await axios.delete(`https://mern-cart-server.onrender.com/cart/${cartId}/${productId}`);\n        setCart(response.data.products); // Sync cart with backend response\n      }\n    } catch (error) {\n      console.error('Error removing product from cart:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      totalPrice,\n      addToCart,\n      updateQuantity,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"6vvBUxpNq1nUzs2qDvazX3ZkbYQ=\");\n_c = CartProvider;\nexport { CartContext, CartProvider };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","cartId","setCartId","totalPrice","setTotalPrice","fetchCart","userId","response","get","data","products","error","console","calculateTotal","total","reduce","sum","item","productId","price","quantity","addToCart","product","log","post","_id","updateQuantity","newQuantity","prevCart","map","put","removeFromCart","filter","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nahima/NobleNoor/noblenoor/src/Context/CartContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CartContext = createContext();\n\nconst CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [cartId, setCartId] = useState(null);  // Store cartId dynamically\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  // Fetch cart and cartId when the component is mounted\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const userId = 'user-123'; // Replace with actual user ID\n        // Use the live backend URL\n        const response = await axios.get(`https://mern-cart-server.onrender.com/cart/${userId}`);\n        setCart(response.data.products || []);\n        setCartId(response.data.cartId);  // Store the cartId for future use\n      } catch (error) {\n        console.error('Error fetching cart:', error);\n      }\n    };\n    fetchCart();\n  }, []);\n\n  // Calculate the total price whenever the cart changes\n  useEffect(() => {\n    const calculateTotal = () => {\n      const total = cart.reduce((sum, item) => sum + (item.productId.price || 0) * item.quantity, 0);\n      setTotalPrice(total);\n    };\n    calculateTotal();\n  }, [cart]);\n\n  // Add a product to the cart\n  const addToCart = async (product) => {\n    try {\n      console.log('Adding product to cart:', product);\n\n      const response = await axios.post('https://mern-cart-server.onrender.com/cart', {\n        userId: 'user-123', // Replace with actual user ID\n        productId: product._id,\n        quantity: 1,\n      });\n\n      setCart(response.data.products); // Update the cart with response data\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n\n  // Update the quantity of a product in the cart\n  const updateQuantity = async (productId, newQuantity) => {\n    if (newQuantity <= 0) return; // Prevent setting quantity to 0 or negative numbers\n\n    // Optimistically update the cart state before the backend response\n    setCart((prevCart) =>\n      prevCart.map((item) =>\n        item.productId._id === productId ? { ...item, quantity: newQuantity } : item\n      )\n    );\n\n    try {\n      if (cartId) {\n        const response = await axios.put(`https://mern-cart-server.onrender.com/cart/${cartId}/${productId}`, {\n          quantity: newQuantity,\n        });\n        setCart(response.data.products);  // Sync cart with backend response\n      }\n    } catch (error) {\n      console.error('Error updating quantity:', error);\n    }\n  };\n\n  // Remove a product from the cart\n  const removeFromCart = async (productId) => {\n    // Optimistically remove the item from the cart state before the backend response\n    setCart((prevCart) => prevCart.filter((item) => item.productId._id !== productId));\n\n    try {\n      if (cartId) {\n        const response = await axios.delete(`https://mern-cart-server.onrender.com/cart/${cartId}/${productId}`);\n        setCart(response.data.products);  // Sync cart with backend response\n      }\n    } catch (error) {\n      console.error('Error removing product from cart:', error);\n    }\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, totalPrice, addToCart, updateQuantity, removeFromCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport { CartContext, CartProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
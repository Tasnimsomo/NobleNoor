{"ast":null,"code":"/*import React, { useState } from 'react';\nimport './adminPage.css';\n\nconst AdminPage = () => {\n  const [products, setProducts] = useState([]);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    price: '',\n    description: '',\n    category: '',\n    image: null\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewProduct({ ...newProduct, [name]: value });\n  };\n\n  const handleImageChange = (e) => {\n    setNewProduct({ ...newProduct, image: e.target.files[0] });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (editingId !== null) {\n      setProducts(products.map(product => \n        product.id === editingId ? { ...newProduct, id: editingId } : product\n      ));\n      setEditingId(null);\n    } else {\n      setProducts([...products, { ...newProduct, id: Date.now() }]);\n    }\n    setNewProduct({ name: '', price: '', description: '', category: '', image: null });\n  };\n\n  const handleEdit = (product) => {\n    setNewProduct({ ...product });\n    setEditingId(product.id);\n  };\n\n  const handleDelete = (id) => {\n    setProducts(products.filter(product => product.id !== id));\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <h1>Admin Product Management</h1>\n      \n      <form onSubmit={handleSubmit} className=\"add-product-form\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={newProduct.name}\n          onChange={handleInputChange}\n          placeholder=\"Product Name\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"price\"\n          value={newProduct.price}\n          onChange={handleInputChange}\n          placeholder=\"Price\"\n          step=\"10\"\n          required\n        />\n        <textarea\n          name=\"description\"\n          value={newProduct.description}\n          onChange={handleInputChange}\n          placeholder=\"Product Description\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"category\"\n          value={newProduct.category}\n          onChange={handleInputChange}\n          placeholder=\"Category\"\n          required\n        />\n        <input\n          type=\"file\"\n          name=\"image\"\n          onChange={handleImageChange}\n          accept=\"image/*\"\n          required={!editingId}\n        />\n        <button type=\"submit\">{editingId !== null ? 'Update Product' : 'Add Product'}</button>\n      </form>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Product</th>\n            <th>Price</th>\n            <th>Description</th>\n            <th>Category</th>\n            <th>Image</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {products.map((product) => (\n            <tr key={product.id}>\n              <td>{product.name}</td>\n              <td>${parseFloat(product.price).toFixed(2)}</td>\n              <td>{product.description}</td>\n              <td>{product.category}</td>\n              <td>{product.image && product.image.name}</td>\n              <td>\n                <button className=\"edit-btn\" onClick={() => handleEdit(product)}>Edit</button>\n                <button className=\"delete-btn\" onClick={() => handleDelete(product.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminPage;*/","map":{"version":3,"names":[],"sources":["/home/nahima/NOBLENOOR/noblenoor/src/Admin/adminPage.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport './adminPage.css';\n\nconst AdminPage = () => {\n  const [products, setProducts] = useState([]);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    price: '',\n    description: '',\n    category: '',\n    image: null\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewProduct({ ...newProduct, [name]: value });\n  };\n\n  const handleImageChange = (e) => {\n    setNewProduct({ ...newProduct, image: e.target.files[0] });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (editingId !== null) {\n      setProducts(products.map(product => \n        product.id === editingId ? { ...newProduct, id: editingId } : product\n      ));\n      setEditingId(null);\n    } else {\n      setProducts([...products, { ...newProduct, id: Date.now() }]);\n    }\n    setNewProduct({ name: '', price: '', description: '', category: '', image: null });\n  };\n\n  const handleEdit = (product) => {\n    setNewProduct({ ...product });\n    setEditingId(product.id);\n  };\n\n  const handleDelete = (id) => {\n    setProducts(products.filter(product => product.id !== id));\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <h1>Admin Product Management</h1>\n      \n      <form onSubmit={handleSubmit} className=\"add-product-form\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={newProduct.name}\n          onChange={handleInputChange}\n          placeholder=\"Product Name\"\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"price\"\n          value={newProduct.price}\n          onChange={handleInputChange}\n          placeholder=\"Price\"\n          step=\"10\"\n          required\n        />\n        <textarea\n          name=\"description\"\n          value={newProduct.description}\n          onChange={handleInputChange}\n          placeholder=\"Product Description\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"category\"\n          value={newProduct.category}\n          onChange={handleInputChange}\n          placeholder=\"Category\"\n          required\n        />\n        <input\n          type=\"file\"\n          name=\"image\"\n          onChange={handleImageChange}\n          accept=\"image/*\"\n          required={!editingId}\n        />\n        <button type=\"submit\">{editingId !== null ? 'Update Product' : 'Add Product'}</button>\n      </form>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Product</th>\n            <th>Price</th>\n            <th>Description</th>\n            <th>Category</th>\n            <th>Image</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {products.map((product) => (\n            <tr key={product.id}>\n              <td>{product.name}</td>\n              <td>${parseFloat(product.price).toFixed(2)}</td>\n              <td>{product.description}</td>\n              <td>{product.category}</td>\n              <td>{product.image && product.image.name}</td>\n              <td>\n                <button className=\"edit-btn\" onClick={() => handleEdit(product)}>Edit</button>\n                <button className=\"delete-btn\" onClick={() => handleDelete(product.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminPage;*/"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
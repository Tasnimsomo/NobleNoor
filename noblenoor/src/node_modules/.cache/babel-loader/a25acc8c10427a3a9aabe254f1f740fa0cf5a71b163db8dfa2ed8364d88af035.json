{"ast":null,"code":"var _jsxFileName = \"/home/nahima/NobleNoor/noblenoor/src/Profile/AuthProvider.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"site\") || \"\");\n  const navigate = useNavigate();\n\n  // Login action remains unchanged\n  const loginAction = useCallback(async data => {\n    try {\n      const response = await fetch(`${API_URL}/users/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error(\"Login failed\");\n      }\n      const res = await response.json();\n      if (res.token) {\n        setUser({\n          role: res.role\n        });\n        setToken(res.token);\n        localStorage.setItem(\"site\", res.token);\n        localStorage.setItem('isLoggedIn', 'true');\n        navigate(\"/\");\n      }\n      throw new Error(res.message);\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }, [navigate]);\n\n  // New: Register action\n  const registerAction = useCallback(async data => {\n    try {\n      const response = await fetch(`${API_URL}/users/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Registration failed\");\n      }\n      const res = await response.json();\n      return res;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }, []);\n  const logOut = useCallback(() => {\n    setUser(null);\n    setToken(\"\");\n    localStorage.removeItem(\"site\");\n    localStorage.setItem('isLoggedIn', 'false');\n    navigate(\"/login\");\n  }, [navigate]);\n  const value = {\n    token,\n    user,\n    loginAction,\n    registerAction,\n    // Expose registerAction\n    logOut\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"apMhyYPiFxyDm1sBzR58y3vWOIQ=\", true);\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["AuthProvider","children","_s","user","setUser","useState","token","setToken","localStorage","getItem","navigate","useNavigate","loginAction","useCallback","data","response","fetch","API_URL","method","headers","body","JSON","stringify","ok","Error","res","json","role","setItem","message","err","console","error","registerAction","logOut","removeItem","value","_jsxDEV","AuthContext","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nahima/NobleNoor/noblenoor/src/Profile/AuthProvider.js"],"sourcesContent":["const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"site\") || \"\");\n  const navigate = useNavigate();\n\n  // Login action remains unchanged\n  const loginAction = useCallback(async (data) => {\n    try {\n      const response = await fetch(`${API_URL}/users/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        throw new Error(\"Login failed\");\n      }\n      const res = await response.json();\n      if (res.token) {\n        setUser({ role: res.role });\n        setToken(res.token);\n        localStorage.setItem(\"site\", res.token);\n        localStorage.setItem('isLoggedIn', 'true');\n        navigate(\"/\");\n      }\n      throw new Error(res.message);\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }, [navigate]);\n\n  // New: Register action\n  const registerAction = useCallback(async (data) => {\n    try {\n      const response = await fetch(`${API_URL}/users/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Registration failed\");\n      }\n\n      const res = await response.json();\n      return res;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }, []);\n\n  const logOut = useCallback(() => {\n    setUser(null);\n    setToken(\"\");\n    localStorage.removeItem(\"site\");\n    localStorage.setItem('isLoggedIn', 'false');\n    navigate(\"/login\");\n  }, [navigate]);\n\n  const value = {\n    token,\n    user,\n    loginAction,\n    registerAction, // Expose registerAction\n    logOut\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
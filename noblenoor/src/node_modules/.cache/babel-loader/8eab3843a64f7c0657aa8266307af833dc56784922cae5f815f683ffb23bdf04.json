{"ast":null,"code":"var _jsxFileName = \"/home/nahima/NobleNoor/noblenoor/src/Context/CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst API_URL = 'http://localhost:5000/api';\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState({\n    products: [],\n    totalAmount: 0\n  });\n\n  // Fetch cart when the component is mounted\n  useEffect(() => {\n    fetchCart();\n  }, []);\n  const fetchCart = async () => {\n    try {\n      const response = await axios.get('https://mern-cart-server.onrender.com/api/cart/items', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setCart(response.data);\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    }\n  };\n\n  // Add a product to the cart\n  const addToCart = async (productId, quantity) => {\n    try {\n      const response = await axios.post('https://mern-cart-server.onrender.com/api/cart/add', {\n        productId,\n        quantity\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setCart(response.data);\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n\n  // Update the quantity of a product in the cart\n  const updateQuantity = async (productId, quantity) => {\n    try {\n      const response = await axios.put('https://mern-cart-server.onrender.com/api/cart/update', {\n        productId,\n        quantity\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setCart(response.data);\n    } catch (error) {\n      console.error('Error updating quantity:', error);\n    }\n  };\n\n  // Remove a product from the cart\n  const removeFromCart = async productId => {\n    try {\n      const response = await axios.delete(`https://mern-cart-server.onrender.com/api/cart/remove/${productId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setCart(response.data);\n    } catch (error) {\n      console.error('Error removing product from cart:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      updateQuantity,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"xEPdga33u26jBjxscBvtAovnvrs=\");\n_c = CartProvider;\nexport { CartContext, CartProvider };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CartContext","API_URL","CartProvider","children","_s","cart","setCart","products","totalAmount","fetchCart","response","get","headers","Authorization","localStorage","getItem","data","error","console","addToCart","productId","quantity","post","updateQuantity","put","removeFromCart","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nahima/NobleNoor/noblenoor/src/Context/CartContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CartContext = createContext();\n\nconst API_URL = 'http://localhost:5000/api'\n\nconst CartProvider = ({ children }) => {\n  const [cart, setCart] = useState({ products: [], totalAmount: 0 });\n\n  // Fetch cart when the component is mounted\n  useEffect(() => {\n    fetchCart();\n  }, []);\n\n  const fetchCart = async () => {\n    try {\n      const response = await axios.get('https://mern-cart-server.onrender.com/api/cart/items', {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      setCart(response.data);\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    }\n  };\n\n  // Add a product to the cart\n  const addToCart = async (productId, quantity) => {\n    try {\n      const response = await axios.post('https://mern-cart-server.onrender.com/api/cart/add', \n        { productId, quantity },\n        { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } }\n      );\n      setCart(response.data);\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n\n  // Update the quantity of a product in the cart\n  const updateQuantity = async (productId, quantity) => {\n    try {\n      const response = await axios.put('https://mern-cart-server.onrender.com/api/cart/update', \n        { productId, quantity },\n        { headers: { Authorization: `Bearer ${localStorage.getItem('token')}` } }\n      );\n      setCart(response.data);\n    } catch (error) {\n      console.error('Error updating quantity:', error);\n    }\n  };\n\n  // Remove a product from the cart\n  const removeFromCart = async (productId) => {\n    try {\n      const response = await axios.delete(`https://mern-cart-server.onrender.com/api/cart/remove/${productId}`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      setCart(response.data);\n    } catch (error) {\n      console.error('Error removing product from cart:', error);\n    }\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, updateQuantity, removeFromCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport { CartContext, CartProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}